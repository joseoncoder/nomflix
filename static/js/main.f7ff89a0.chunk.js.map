{"version":3,"sources":["assets/joseon.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailTab.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","ImageContainer_","Year","Poster","id","imageUrl","rating","year","isMovie","target","disabled","require","length","substring","to","HomePresenter","nowPlaying","upcoming","popular","error","loading","Loader","map","movie","key","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","tvApi","get","append_to_response","searchWords","query","encodeURIComponent","moviesApi","collectionId","HomeContainer","state","data","results","this","setState","console","log","React","Component","TVPresenter","topRated","airingToday","show","name","first_air_date","TVContainer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","handleSubmit","updateWords","onSubmit","placeholder","value","onChange","prototype","PropTypes","array","bool","isRequired","string","func","SearchContainer","event","preventDefault","searchByWords","a","DetailTab","Trailers","result","videos","Collection","collection","Season","season","ProductionInfo","production_companies","TabContainer","TrailerItems","TrailerVideo","iframe","CollectionGrid","ProductGrid","className","label","trailer","index","src","parts","air_date","pInfo","logo_path","Tabs","activeTab","changeTab","tab","content","buttons","Children","child","push","TabButtons","button","onClick","Tab","Fragment","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","original_name","backdrop_path","runtime","episode_run_time","genres","genre","overview","DetailContainer","includes","match","history","parseId","parseInt","isNaN","belongs_to_collection","seasons","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7ff89a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/joseon.4330f146.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n  margin-bottom: 25px;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n); //children은 react에 예약된 prop\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 50px;\n  margin-top: 22px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loaidng\">\n      🐎 🐎 🐎\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  backgoround-position: center center;\n  transition: opacity 0.2s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst ImageContainer_ = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n`;\n\nconst Title = styled.span`\n  display: block;\n  font-size: 12px;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.7);\n`;\n\nconst Poster = ({\n  id,\n  imageUrl,\n  title,\n  rating,\n  year,\n  isMovie = false,\n  target,\n  disabled = false\n}) =>\n  disabled ? (\n    <Container>\n      <ImageContainer_>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/joseon.png\")\n          }\n        />\n      </ImageContainer_>\n      <Title>\n        {title.length > 17 ? `${title.substring(0, 17)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  ) : (\n    <Link\n      to={isMovie ? `/movie/${id}` : `/show/${id}`}\n      target={target ? \"_parent\" : \"\"}\n    >\n      <Container>\n        <ImageContainer>\n          <Image\n            bgUrl={\n              imageUrl\n                ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n                : require(\"../assets/joseon.png\")\n            }\n          />\n          <Rating>\n            <span role=\"img\" aria-label=\"rating\">\n              ⭐️\n            </span>{\" \"}\n            {rating}/10\n          </Rating>\n        </ImageContainer>\n        <Title>\n          {title.length > 17 ? `${title.substring(0, 17)}...` : title}\n        </Title>\n        <Year>{year}</Year>\n      </Container>\n    </Link>\n  );\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  iamgeUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          //마지막 조건은 component로 언제나 true\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          //마지막 조건은 component로 언제나 true\n          <Section title=\"Upcoming Playing\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          //마지막 조건은 component로 언제나 true\n          <Section title=\"Popular Playing\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"4769845e6dd4b68fa6958ca760228cbc\",\n    language: \"en-US\"\n  }\n});\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  tvDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: searchWords =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(searchWords)\n      }\n    })\n};\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: searchWords =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(searchWords)\n      }\n    }),\n  collection: collectionId => api.get(`collection/${collectionId}`)\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movies information !\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    console.log(this.state);\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Show | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n\n      this.setState({\n        topRated,\n        popular,\n        airingToday\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find TV Information !\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    console.log(this.state);\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.7);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 1);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 50px;\n  text-align: center;\n  border-bottom: 5px solid\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchWords,\n  error,\n  loading,\n  handleSubmit,\n  updateWords\n}) => (\n  <>\n    <Helmet>\n      <title> Seacrh | Nomflix</title>\n    </Helmet>\n    {\n      <Container>\n        <Form onSubmit={handleSubmit}>\n          <Input\n            placeholder=\"Search Movies or TV Shows ..\"\n            value={searchWords}\n            onChange={updateWords}\n          />\n        </Form>\n        {loading ? (\n          <Loader />\n        ) : (\n          <>\n            {movieResults && movieResults.length > 0 && (\n              <Section title=\"Movie Results\">\n                {movieResults.map(movie => (\n                  <Poster\n                    key={movie.id}\n                    id={movie.id}\n                    title={movie.original_title}\n                    imageUrl={movie.poster_path}\n                    rating={movie.vote_average}\n                    year={\n                      movie.release_date && movie.release_date.substring(0, 4)\n                    }\n                    isMovie={true}\n                  />\n                ))}\n              </Section>\n            )}\n            {tvResults && tvResults.length > 0 && (\n              <Section title=\"TV Results\">\n                {tvResults.map(show => (\n                  <Poster\n                    key={show.id}\n                    id={show.id}\n                    title={show.name}\n                    imageUrl={show.poster_path}\n                    rating={show.vote_average}\n                    year={\n                      show.first_air_date && show.first_air_date.substring(0, 4)\n                    }\n                    isMovie={false}\n                  />\n                ))}\n              </Section>\n            )}\n          </>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length == 0 &&\n          movieResults == 0 && <Message color=\"#95a5a6\" text=\"Nothing found\" />}\n      </Container>\n    }\n  </>\n);\n\nSearchPresenter.prototype = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchWords: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateWords: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchWords: \"\",\n    error: null,\n    loading: false\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchWords } = this.state;\n    if (searchWords !== \"\") {\n      this.searchByWords();\n    }\n  };\n\n  updateWords = event => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({\n      searchWords: value\n    });\n  };\n\n  searchByWords = async () => {\n    const { searchWords } = this.state;\n    this.setState({ loading: true });\n\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchWords);\n\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchWords);\n\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find results .\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchWords, error, loading } = this.state;\n    console.log(this.state);\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchWords={searchWords}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateWords={this.updateWords}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Poster from \"Components/Poster\";\n\nclass DetailTab extends React.Component {\n  render() {\n    const isMovie = this.props.isMovie;\n    const Trailers = this.props.result.videos.results;\n    const Collection = this.props.collection;\n    const Season = this.props.season;\n    const ProductionInfo = this.props.result.production_companies;\n\n    const Image = styled.div`\n      background-image: url(${props => props.bgUrl});\n      margin: 25px;\n      height: 152px;\n      width: 300px;\n      background-size: 100% 100%;\n      border-radius: 4px;\n      backgoround-position: center center;\n      text-align: center;\n      align-content: center;\n      align-items: center;\n    `;\n\n    const TabContainer = styled.div``;\n    const TrailerItems = styled.div`\n      height: calc(100vh - 340px);\n      overflow: scroll;\n    `;\n    const TrailerVideo = styled.iframe`\n      width: 90%;\n      height: 80%;\n      margin-bottom: 50px;\n    `;\n\n    const CollectionGrid = styled.div`\n      height: calc(100vh - 340px);\n      margin-top: 25px;\n      display: grid;\n      grid-template-columns: repeat(auto-fill, 125px);\n      grid-gap: 25px;\n      overflow: scroll;\n    `;\n    const ProductGrid = styled.div`\n      height: calc(100vh - 340px);\n      display: grid;\n      grid-template-columns: repeat(auto-fill, 310px);\n      grid-gap: 25px;\n      overflow: scroll;\n    `;\n\n    return (\n      <TabContainer className=\"tabs\">\n        <Tabs>\n          <Tab label=\"Trailer\">\n            <TrailerItems>\n              {Trailers &&\n                Trailers.map((trailer, index) => (\n                  <TrailerVideo\n                    key={`${index}`}\n                    src={`https://www.youtube.com/embed/${trailer.key}`}\n                  />\n                ))}\n            </TrailerItems>\n          </Tab>\n          {(Collection || Season) && (\n            <Tab label={isMovie ? \"Collection\" : \"Season\"}>\n              <CollectionGrid>\n                {isMovie\n                  ? Collection &&\n                    Collection.parts &&\n                    Collection.parts.map(collection => (\n                      <Poster\n                        key={collection.id}\n                        id={collection.id}\n                        title={collection.title}\n                        imageUrl={collection.poster_path}\n                        rating={collection.vote_average}\n                        year={\n                          collection.release_date &&\n                          collection.release_date.substring(0, 4)\n                        }\n                        isMovie={true}\n                        target={true}\n                      />\n                    ))\n                  : Season &&\n                    Season.map(season => (\n                      <Poster\n                        key={season.id}\n                        id={this.props.result.id}\n                        title={season.name}\n                        imageUrl={season.poster_path}\n                        rating={season.vote_average}\n                        year={\n                          season.air_date && season.air_date.substring(0, 4)\n                        }\n                        isMovie={false}\n                        disabled={true}\n                      />\n                    ))}\n              </CollectionGrid>\n            </Tab>\n          )}\n\n          <Tab label=\"Production\">\n            <ProductGrid>\n              {ProductionInfo.length > 0 &&\n                ProductionInfo.map(pInfo =>\n                  pInfo.logo_path ? (\n                    <div>\n                      <Image\n                        bgUrl={`https://image.tmdb.org/t/p/original${pInfo.logo_path}`}\n                      />\n                    </div>\n                  ) : (\n                    <div>\n                      <Image>{pInfo.name}</Image>\n                    </div>\n                  )\n                )}\n            </ProductGrid>\n          </Tab>\n        </Tabs>\n      </TabContainer>\n    );\n  }\n}\n\nclass Tabs extends React.Component {\n  state = {\n    activeTab: this.props.children[0].props.label\n  };\n  changeTab = tab => {\n    this.setState({ activeTab: tab });\n  };\n  render() {\n    let content;\n    let buttons = [];\n    return (\n      <div>\n        {React.Children.map(this.props.children, child => {\n          if (child !== null) {\n            buttons.push(child.props.label);\n            if (child.props.label === this.state.activeTab)\n              content = child.props.children;\n          }\n        })}\n\n        <TabButtons\n          activeTab={this.state.activeTab}\n          buttons={buttons}\n          changeTab={this.changeTab}\n        />\n        <div className=\"tab-content\">{content}</div>\n      </div>\n    );\n  }\n}\n\nconst TabButtons = ({ buttons, changeTab, activeTab }) => {\n  return (\n    <div className=\"tab-buttons\">\n      {buttons.map((button, index) => {\n        return (\n          <button\n            key={index}\n            className={button === activeTab ? \"active\" : \"\"}\n            onClick={() => changeTab(button)}\n          >\n            {button}\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n\nconst Tab = props => {\n  return <React.Fragment>{props.children}</React.Fragment>;\n};\n\nexport default DetailTab;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport DetailTab from \"Routes/Detail/DetailTab\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 30px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  heigth: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-right: 20px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  fint-weight: bold;\n  margin-left: 20px;\n  margin-bottom: 20px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span``;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 2;\n  widht: 50%;\n  margin-left: 20px;\n`;\n\nconst DetailContainer = styled.div`\n  height: 30%;\n  width: 100%;\n`;\n\nconst TabContainer = styled.ul`\n  display: flex;\n`;\nconst TabComponents = styled.li`\n  margin: 20px;\n  wdith: 50px;\n`;\n\nconst DetailPresenter = ({\n  result,\n  error,\n  loading,\n  collection,\n  season,\n  isMovie\n}) => (\n  <>\n    <Helmet>\n      <title>Loading | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : error ? (\n      <Message />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}{\" \"}\n            | Nomflix\n          </title>\n        </Helmet>\n        <Backdrop\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n        />\n        <Content>\n          <Cover\n            bgImage={\n              result.poster_path\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                : require(\"../../assets/joseon.png\")\n            }\n          />\n          <Data>\n            <Title>\n              {result.original_title\n                ? result.original_title\n                : result.original_name}\n            </Title>\n            <ItemContainer>\n              <Item>\n                {result.release_date\n                  ? result.release_date.substring(0, 4)\n                  : result.first_air_date.substring(0, 4)}\n              </Item>\n              <Divider>\n                •{result.runtime ? result.runtime : result.episode_run_time[0]}\n              </Divider>\n              <Divider>\n                •\n                {result.genres &&\n                  result.genres.map((genre, index) =>\n                    index === result.genres.length - 1\n                      ? `${genre.name}`\n                      : `${genre.name} / `\n                  )}\n              </Divider>\n            </ItemContainer>\n            <Overview>{result.overview}</Overview>\n            <DetailTab\n              result={result}\n              isMovie={isMovie}\n              collection={collection}\n              season={season}\n            />\n          </Data>\n        </Content>\n      </Container>\n    )}\n  </>\n);\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n      collection: false,\n      season: false\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n\n    const { isMovie } = this.state;\n    const parseId = parseInt(id);\n    if (isNaN(parseId)) {\n      return push(\"/\");\n    }\n\n    let result;\n    let collection;\n    let season;\n\n    try {\n      if (isMovie) {\n        // const esponse = await moviesApi.movieDetail(parseId);\n        // result = response.data;\n        ({ data: result } = await moviesApi.movieDetail(parseId)); // ( ... ) == const=\n\n        result.belongs_to_collection\n          ? ({ data: collection } = await moviesApi.collection(\n              result.belongs_to_collection.id\n            ))\n          : ({ data: collection } = false);\n      } else {\n        // const response = await tvApi.tvDetail(parseId);\n        // result = response.data;\n        ({ data: result } = await tvApi.tvDetail(parseId)); // ( ... _ == const=)\n        result.seasons ? (season = result.seasons) : (season = false);\n      }\n    } catch {\n      this.setState({ error: \"Can't find Anything.\" });\n    } finally {\n      this.setState({\n        loading: false,\n        result,\n        collection,\n        season\n      });\n    }\n  }\n\n  render() {\n    const { result, error, loading, collection, season, isMovie } = this.state;\n    console.log(this.state);\n    return (\n      <DetailPresenter\n        result={result}\n        error={error}\n        loading={loading}\n        isMovie={isMovie}\n        collection={collection}\n        season={season}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Header from \"Components/Header\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route\n        path=\"https://joseoncoder.github.io/nomflix/\"\n        exact\n        component={Home}\n      />\n      <Route\n        path=\"https://joseoncoder.github.io/nomflix/tv\"\n        exact\n        component={TV}\n      />\n      <Route\n        path=\"https://joseoncoder.github.io/nomflix/search\"\n        exact\n        component={Search}\n      />\n      <Route\n        path=\"https://joseoncoder.github.io/nomflix/movie/:id\"\n        component={Detail}\n      />\n      <Route\n        path=\"https://joseoncoder.github.io/nomflix/show/:id\"\n        component={Detail}\n      />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n        ${reset};\n        a{\n            text-decoration:none;\n            color:inherit;\n        }\n        *{\n            box-sizing:border-box;\n        }\n        body{\n            font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Oxygen, Ubuntu, Canta\n            font-size:12px;\n            background-color:rgba(20, 20, 20, 1);\n            color: white;\n            padding-top:60px;\n        }\n        \n        .tabs{\n            font-family:arial;\n            margin:20px;\n            width:70%;\n          }\n          \n          img{\n            width:300px;\n          }\n          \n          .tab-buttons{\n            margin-bottom:50px;\n          }\n          \n          button{\n            margin-right:15px;\n            font-size:20px;\n            background:transparent;\n            border:none;\n            outline:none;\n            padding:10px 20px ;\n            cursor:pointer;\n            color:rgba(159, 159, 173); \n            transition:all ease-in-out .2s;\n            border-bottom:2px solid transparent;\n            \n          }\n          .active{\n            border-bottom:2px solid #42b3f4;\n            color: white;\n          }\n\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}